<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.learn.dao.FlightDAO">
    <resultMap id="BaseResultMap" type="com.spring.learn.model.Flight">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="flightno" jdbcType="VARCHAR" property="flightno"/>
        <result column="departurecity" jdbcType="INTEGER" property="departurecity"/>
        <result column="departuretime" jdbcType="TIMESTAMP" property="departuretime"/>
        <result column="arrivalcity" jdbcType="INTEGER" property="arrivalcity"/>
        <result column="arrivalitime" jdbcType="TIMESTAMP" property="arrivalitime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, flightno, departurecity, departuretime, arrivalcity, arrivalitime
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from flight
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selAllFlight" resultType="com.spring.learn.model.Flight">
        SELECT * from flight;

    </select>

    <select id="selectByDAKey" parameterType="java.lang.Integer" resultType="com.spring.learn.model.Flight">
    select * from flight where departurecity =#{departureCity} and arrivalcity =  #{arrvalCity}
  </select>


    <select id="getCityT" parameterType="int" resultType="com.spring.learn.model.City">
        SELECT t_id id, t_name name FROM teacher WHERE t_id=#{id}
     </select>

    <select id="getCityD" parameterType="int" resultType="com.spring.learn.model.City">
        SELECT s_id id, s_name name FROM student WHERE class_id=#{id}
     </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from flight
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.spring.learn.model.Flight"
            useGeneratedKeys="true">
    insert into flight (flightno, departurecity, departuretime, 
      arrivalcity, arrivalitime)
    values (#{flightno,jdbcType=VARCHAR}, #{departurecity,jdbcType=INTEGER}, #{departuretime,jdbcType=TIMESTAMP}, 
      #{arrivalcity,jdbcType=INTEGER}, #{arrivalitime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.spring.learn.model.Flight"
            useGeneratedKeys="true">
        insert into flight
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="flightno != null">
                flightno,
            </if>
            <if test="departurecity != null">
                departurecity,
            </if>
            <if test="departuretime != null">
                departuretime,
            </if>
            <if test="arrivalcity != null">
                arrivalcity,
            </if>
            <if test="arrivalitime != null">
                arrivalitime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="flightno != null">
                #{flightno,jdbcType=VARCHAR},
            </if>
            <if test="departurecity != null">
                #{departurecity,jdbcType=INTEGER},
            </if>
            <if test="departuretime != null">
                #{departuretime,jdbcType=TIMESTAMP},
            </if>
            <if test="arrivalcity != null">
                #{arrivalcity,jdbcType=INTEGER},
            </if>
            <if test="arrivalitime != null">
                #{arrivalitime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.spring.learn.model.Flight">
        update flight
        <set>
            <if test="flightno != null">
                flightno = #{flightno,jdbcType=VARCHAR},
            </if>
            <if test="departurecity != null">
                departurecity = #{departurecity,jdbcType=INTEGER},
            </if>
            <if test="departuretime != null">
                departuretime = #{departuretime,jdbcType=TIMESTAMP},
            </if>
            <if test="arrivalcity != null">
                arrivalcity = #{arrivalcity,jdbcType=INTEGER},
            </if>
            <if test="arrivalitime != null">
                arrivalitime = #{arrivalitime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.spring.learn.model.Flight">
    update flight
    set flightno = #{flightno,jdbcType=VARCHAR},
      departurecity = #{departurecity,jdbcType=INTEGER},
      departuretime = #{departuretime,jdbcType=TIMESTAMP},
      arrivalcity = #{arrivalcity,jdbcType=INTEGER},
      arrivalitime = #{arrivalitime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>